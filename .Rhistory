renv::snapshot()
lapse1=df %>%
group_by(lapse=Churn) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n))
source("up(telco).R")
source("up(telco).R")
source("up(telco).R")
setwd("/Users/vivianalobo 1/Documents/LapseRiskAAS/R")
source("up(telco).R")
lapse1=df %>%
group_by(lapse=Churn) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n))
lapse1
### histogram
ggplot(data =df , aes(x = tenure), col=" black") +
xlab("survival time (in months)") + ylab("frequency")+
theme_bw() +
theme(axis.title.x = element_text(color = "black",size=22),
axis.title.y = element_text(color = "black",size=22),
axis.text=element_text(color = "black",size=22),
axis.title = element_text(color = "black",size=22)) +
# facet_wrap() +
geom_histogram(bins=15, color='white',fill= "grey50")
### survival analysis
formula_km <- Surv(tenure, status) ~ 1
formula <- Surv(tenure, status) ~ NULL
km <- survfit2(formula_km,df)
# Manipulating the KM to format that matches parsnip predictions.
surv_km <- tidy_survfit(km, type = "surv") %>%
dplyr::select(.eval_time = time, .pred_survival = estimate) %>%
tidyr::nest(.pred = c(.eval_time, .pred_survival))
km_fit <- surv_km %>%
tidyr::unnest(cols = .pred) %>%
filter(.eval_time < 75)
haz.km = km_fit %>%
mutate(.haz=tx.emp(.eval_time, .pred_survival))
ggplot() +
geom_step(data= km_fit, aes(x= .eval_time, y = .pred), color = "grey50", linewidth=1.5) +
scale_y_continuous(limits = c(0.5,1),breaks = seq(0, 1, 0.2), labels = point) +
scale_x_continuous(limits=c(0,75), breaks = seq(0,60,by=20), labels = grad) +
theme_bw() +
theme(plot.title = element_text(lineheight = 2),
axis.title.x = element_text(color = "black", size = 22),
axis.title.y = element_text(color = "black", size = 22),
axis.text = element_text(color="black",size=22)) +
labs(x =  "survival time (in months)", y = "survival probabilities")
ggplot() +
geom_step(data= surv_km, aes(x= .eval_time, y = .pred_survival), color = "grey50", linewidth=1.5) +
scale_y_continuous(limits = c(0.5,1),breaks = seq(0, 1, 0.2), labels = point) +
scale_x_continuous(limits=c(0,75), breaks = seq(0,60,by=20), labels = grad) +
theme_bw() +
theme(plot.title = element_text(lineheight = 2),
axis.title.x = element_text(color = "black", size = 22),
axis.title.y = element_text(color = "black", size = 22),
axis.text = element_text(color="black",size=22)) +
labs(x =  "survival time (in months)", y = "survival probabilities")
# Manipulating the KM to format that matches parsnip predictions.
surv_km <- tidy_survfit(km, type = "surv") %>%
dplyr::select(.eval_time = time, .pred_survival = estimate) %>%
tidyr::nest(.pred = c(.eval_time, .pred_survival))
km_fit <- surv_km %>%
tidyr::unnest(cols = .pred) %>%
filter(.eval_time < 75)
haz.km = km_fit %>%
mutate(.haz=tx.emp(.eval_time, .pred_survival))
ggplot() +
geom_step(data= surv_km, aes(x= .eval_time, y = .pred_survival), color = "grey50", linewidth=1.5) +
scale_y_continuous(limits = c(0.5,1),breaks = seq(0, 1, 0.2), labels = point) +
scale_x_continuous(limits=c(0,75), breaks = seq(0,60,by=20), labels = grad) +
theme_bw() +
theme(plot.title = element_text(lineheight = 2),
axis.title.x = element_text(color = "black", size = 22),
axis.title.y = element_text(color = "black", size = 22),
axis.text = element_text(color="black",size=22)) +
labs(x =  "survival time (in months)", y = "survival probabilities")
ggplot(data = haz.km, aes(x=.eval_time, y=.haz)) +
xlab("survival time (in months)") + ylab("hazard curve")+
theme_bw(base_size = 25) +
scale_y_continuous(limits = c(0,0.06),breaks = seq(0,0.06, 0.02), labels = point) +
scale_x_continuous(limits=c(0,75), breaks = seq(0,75,by=20), labels = grad) +
geom_line(linewidth=1.5, color="grey50")
ggplot(data= surv_km, aes(x= .eval_time, y = .pred_survival)) +
geom_step(color = "grey50", linewidth=1.5) +
scale_y_continuous(limits = c(0.5,1),breaks = seq(0, 1, 0.2), labels = point) +
scale_x_continuous(limits=c(0,75), breaks = seq(0,60,by=20), labels = grad) +
theme_bw() +
theme(plot.title = element_text(lineheight = 2),
axis.title.x = element_text(color = "black", size = 22),
axis.title.y = element_text(color = "black", size = 22),
axis.text = element_text(color="black",size=22)) +
labs(x =  "survival time (in months)", y = "survival probabilities")
surv_km
ggplot(data= km_fit, aes(x= .eval_time, y = .pred_survival)) +
geom_step(color = "grey50", linewidth=1.5) +
scale_y_continuous(limits = c(0.5,1),breaks = seq(0, 1, 0.2), labels = point) +
scale_x_continuous(limits=c(0,75), breaks = seq(0,60,by=20), labels = grad) +
theme_bw() +
theme(plot.title = element_text(lineheight = 2),
axis.title.x = element_text(color = "black", size = 22),
axis.title.y = element_text(color = "black", size = 22),
axis.text = element_text(color="black",size=22)) +
labs(x =  "survival time (in months)", y = "survival probabilities")
preds <-bind_rows(Gender=resultado$Gender, .id = "modelo") %>%
group_by(modelo) %>%
ungroup() %>%
tidyr::unnest(cols = .pred)
#### import telco customer data and libraries
source("up(telco).R")
rmarkdown::paged_table(df)
dados <-  df
#Kaplan-Meier fit (marginal)
fit.km1 <- survfit2(Surv(tenure, status) ~ gender, dados)
fit.km2 <- survfit2(Surv(tenure, status) ~ PaymentMethod, dados)
fit.km3 <- survfit2(Surv(tenure, status) ~ Contract, dados)
fit.km4 <- survfit2(Surv(tenure, status) ~ SeniorCitizen, dados)
fit.km5 <- survfit2(Surv(tenure, status) ~ InternetService, dados)
fit.km6 <- survfit2(Surv(tenure, status) ~ StreamingTV, dados)
fit.km8 <- survfit2(Surv(tenure, status) ~ Dependents, dados)
fit.km9 <- survfit2(Surv(tenure, status) ~ PaperlessBilling, dados)
fit.km10<- survfit2(Surv(tenure, status) ~ DeviceProtection, dados)
fit.km11<- survfit2(Surv(tenure, status) ~ PhoneService, dados)
fit.km12<- survfit2(Surv(tenure, status) ~ TechSupport, dados)
extrai_km <- function(fit_km) {
ret <- tidy_survfit(fit_km, type = "surv") %>%
select(.eval_time = time, .pred_survival = estimate, id = strata) %>%
group_by(id) %>%
mutate(haz = tx.emp(.eval_time, .pred_survival)) %>%
tidyr::nest(.pred = c(.eval_time, .pred_survival))
return(ret)
}
kms <- list(Gender=fit.km1, PaymentMethod=fit.km2, Contract=fit.km3,
SeniorCitizen= fit.km4, InternetService= fit.km5,
StreamingTV= fit.km6,Dependents=fit.km8, PaperlessBilling= fit.km9, DeviceProtection=fit.km10, PhoneService= fit.km11, TechSupport=fit.km12)
resultado= map(kms, extrai_km)
preds <-bind_rows(Gender=resultado$Gender, .id = "modelo") %>%
group_by(modelo) %>%
ungroup() %>%
tidyr::unnest(cols = .pred)
a1<- ggplot(aes(x = .eval_time, y = .pred_survival, col=id), data = preds) +
xlab("survival time (in months)") + ylab("survival probabilities")+
geom_step(linewidth=1) +
theme_bw() +
scale_y_continuous(limits=c(0.2,1), breaks = seq(0.2,1,by=.2), labels = point) +
scale_x_continuous(limits=c(0,75), breaks = seq(0,75,by=20), labels = grad)
a2<-ggplot(aes(x = .eval_time, y = haz, col=id), data = preds) +
xlab("survival time (in months)") + ylab("hazard rate")+
theme_bw() +
geom_line(linewidth=1) +
scale_y_continuous(limits=c(0,0.06), breaks = seq(0,0.06,by=.02), labels = point)+
scale_x_continuous(limits=c(0,75), breaks = seq(0,75,by=20), labels = grad)
ggplotly(a1) %>% layout(legend=list(orientation="h",x=0.2, y=-0.2))
ggplotly(a2) %>% layout(legend=list(orientation="h",x=0.2, y=-0.2))
preds <-
bind_rows(SeniorCitizen=resultado$SeniorCitizen, .id = "modelo") %>%
group_by(modelo) %>%
ungroup() %>%
tidyr::unnest(cols = .pred)
d1<- ggplot(aes(x = .eval_time, y = .pred_survival, col=id), data = preds) +
xlab("survival time (in months)") + ylab("survival probabilities")+
geom_step(linewidth=1) +
theme_bw() +
scale_y_continuous(limits=c(0.2,1), breaks = seq(0.2,1,by=.2), labels = point) +
scale_x_continuous(limits=c(0,75), breaks = seq(0,75,by=20), labels = grad)
d2<-ggplot(aes(x = .eval_time, y = haz, col=id), data = preds) +
xlab("survival time (in months)") + ylab("hazard rate")+
theme_bw() +
geom_line(linewidth=1) +
scale_y_continuous(limits=c(0,0.06), breaks = seq(0,0.06,by=.02), labels = point)+
scale_x_continuous(limits=c(0,75), breaks = seq(0,75,by=20), labels = grad)
ggplotly(d1) %>% layout(legend=list(orientation="h",x=0.2, y=-0.2))
ggplotly(d2) %>% layout(legend=list(orientation="h",x=0.2, y=-0.2))
preds <-
bind_rows(InternetService=resultado$InternetService, .id = "modelo") %>%
group_by(modelo) %>%
ungroup() %>%
tidyr::unnest(cols = .pred)
e1<- ggplot(aes(x = .eval_time, y = .pred_survival, col=id), data = preds) +
xlab("survival time (in months)") + ylab("survival probabilities")+
geom_step(linewidth=1) +
theme_bw() +
scale_y_continuous(limits=c(0.2,1), breaks = seq(0.2,1,by=.2), labels = point) +
scale_x_continuous(limits=c(0,75), breaks = seq(0,75,by=20), labels = grad)
e2<-ggplot(aes(x = .eval_time, y = haz, col=id), data = preds) +
xlab("survival time (in months)") + ylab("hazard rate")+
theme_bw() +
geom_line(linewidth=1) +
scale_y_continuous(limits=c(0,0.06), breaks = seq(0,0.06,by=.02), labels = point)+
scale_x_continuous(limits=c(0,75), breaks = seq(0,75,by=20), labels = grad)
ggplotly(e1) %>% layout(legend=list(orientation="h",x=0, y=-0.2))
ggplotly(e1) %>% layout(legend=list(orientation="h",x=0, y=-0.2))
ggplotly(e2) %>% layout(legend=list(orientation="h",x=0, y=-0.2))
preds <-
bind_rows(StreamingTV=resultado$StreamingTV, .id = "modelo") %>%
group_by(modelo) %>%
ungroup() %>%
tidyr::unnest(cols = .pred)
f1<- ggplot(aes(x = .eval_time, y = .pred_survival, col=id), data = preds) +
xlab("survival time (in months)") + ylab("survival probabilities")+
geom_step(linewidth=1) +
theme_bw() +
scale_y_continuous(limits=c(0.2,1), breaks = seq(0.2,1,by=.2), labels = point) +
scale_x_continuous(limits=c(0,75), breaks = seq(0,75,by=20), labels = grad)
f2<-ggplot(aes(x = .eval_time, y = haz, col=id), data = preds) +
xlab("survival time (in months)") + ylab("hazard rate")+
theme_bw() +
geom_line(linewidth=1) +
scale_y_continuous(limits=c(0,0.06), breaks = seq(0,0.06,by=.02), labels = point)+
scale_x_continuous(limits=c(0,75), breaks = seq(0,75,by=20), labels = grad)
ggplotly(f1) %>% layout(legend=list(orientation="h",x=0, y=-0.2))
ggplotly(f2) %>% layout(legend=list(orientation="h",x=0, y=-0.2))
preds <-
bind_rows(Dependents=resultado$Dependents, .id = "modelo") %>%
group_by(modelo) %>%
ungroup() %>%
tidyr::unnest(cols = .pred)
g1<- ggplot(aes(x = .eval_time, y = .pred_survival, col=id), data = preds) +
xlab("survival time (in months)") + ylab("survival probabilities")+
geom_step(linewidth=1) +
theme_bw() +
scale_y_continuous(limits=c(0.2,1), breaks = seq(0.2,1,by=.2), labels = point) +
scale_x_continuous(limits=c(0,75), breaks = seq(0,75,by=20), labels = grad)
g2<-ggplot(aes(x = .eval_time, y = haz, col=id), data = preds) +
xlab("survival time (in months)") + ylab("hazard rate")+
theme_bw() +
geom_line(linewidth=1) +
scale_y_continuous(limits=c(0,0.06), breaks = seq(0,0.06,by=.02), labels = point)+
scale_x_continuous(limits=c(0,75), breaks = seq(0,75,by=20), labels = grad)
ggplotly(g1) %>% layout(legend=list(orientation="h",x=0.2, y=-0.2))
ggplotly(g2) %>% layout(legend=list(orientation="h",x=0.2, y=-0.2))
preds <-
bind_rows(PaperlessBilling=resultado$PaperlessBilling, .id = "modelo") %>%
group_by(modelo) %>%
ungroup() %>%
tidyr::unnest(cols = .pred)
h1<- ggplot(aes(x = .eval_time, y = .pred_survival, col=id), data = preds) +
xlab("survival time (in months)") + ylab("survival probabilities")+
geom_step(linewidth=1) +
theme_bw() +
scale_y_continuous(limits=c(0.2,1), breaks = seq(0.2,1,by=.2), labels = point) +
scale_x_continuous(limits=c(0,75), breaks = seq(0,75,by=20), labels = grad)
h2<-ggplot(aes(x = .eval_time, y = haz, col=id), data = preds) +
xlab("survival time (in months)") + ylab("hazard rate")+
theme_bw() +
geom_line(linewidth=1) +
scale_y_continuous(limits=c(0,0.06), breaks = seq(0,0.06,by=.02), labels = point)+
scale_x_continuous(limits=c(0,75), breaks = seq(0,75,by=20), labels = grad)
ggplotly(h1) %>% layout(legend=list(orientation="h",x=0.2, y=-0.2))
ggplotly(h2) %>% layout(legend=list(orientation="h",x=0.2, y=-0.2))
renv
renv::snapshot()
renv::init()
renv::snapshot()
renv::install()
renv::snapshot()
renv::dependencies()
renv::install()
renv::init()
install.packages('renv')
library(renv)
renv::init()
renv::init()
renv::snapshot()
renv::dependencies()
renv::snapshot()
renv::install()
renv::install_git("vivianalobo/lnmixsurv")
renv::install_git("vivianalobo/lnmixsurv")
renv::install("vivianalobo/lnmixsurv")
renv::snapshot()
renv::install('bayesplot)
)
''
)
N
llll
renv::install()
)
#### Telco customer churn dataset
### loading data and others
source("up(telco).R")
